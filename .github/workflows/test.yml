name: Run Tests

on:
  # Run on pushes to the main branch
  push:
    branches: [ "main" ]
  # Run on pull requests targeting the main branch
  pull_request:
    branches: [ "main" ]

  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    name: Run Cargo Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable # Uses the stable Rust toolchain
        with:
          components: clippy # Optionally install clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2 # Cache cargo registry, index, build outputs

      # --- Added: Install System Dependencies ---
      - name: Install Neovim, Git, and Docker
        run: |
          sudo apt-get update -y
          # Install git just in case checkout didn't provide it or test needs it explicitly
          sudo apt-get install -y git neovim docker.io
          # Optional: Add current user to docker group (might be needed depending on test execution context)
          # sudo usermod -aG docker $USER
          # Optional: Ensure docker service is running (might be needed)
          # sudo systemctl status docker || sudo systemctl start docker

      # --- End Added Section ---

      - name: Run tests
        # Use --workspace because you have multiple crates (e.g., cli)
        # Add -- --ignored if you want to run ignored tests (like Docker interaction tests)
        run: cargo test --workspace --all-targets --verbose

      # Optional: Add linting check
      - name: Run Linter (Clippy)
        run: cargo clippy --workspace -- -D warnings

      # Optional: Add formatting check
      - name: Check Formatting (fmt)
        run: cargo fmt --all --check

